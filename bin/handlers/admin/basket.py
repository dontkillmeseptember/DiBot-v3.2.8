from misc.util import types, logging
from misc.loader import dp, bot

from data.admin_db import is_admin_in_data, load_admin_data
from data.basket_db import load_basket_data, save_basket_data

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /add_bs
@dp.message_handler(commands=['add_bs'])
async def add_bs_command(message: types.Message):
	"""–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –∞–¥–º–∏–Ω–æ–≤"""
	user_id = message.from_user.id
	admin_data = load_admin_data()

	if is_admin_in_data(user_id, admin_data):
		"""–†–∞–∑–±–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ –∞—Ä–≥—É–º–µ–Ω—Ç—ã"""
		args = message.get_args().split()

		if len(args) < 4:
			await message.answer("<b>üë©üèª‚Äçü¶∞üí¨ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É <code>/add_bs</code> [–ê—Ä—Ç–∏–∫—É–ª] [URL –§–æ—Ç–æ] [URL –°–∞–π—Ç–∞] [–°–æ–æ–±—â–µ–Ω–∏–µ]</b>")
			return
		else:
			try:
				"""–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
				bs_data = load_basket_data()

				"""–ü–µ—Ä–µ–¥–∞–µ–º –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∏–∑ —Ç–µ–∫—Å—Ç–∞"""
				art = args[0]
				URL_photo = args[1]
				URL_site = args[2]
				price = args[3]
				message_t = args[4]
				message_admin = " ".join(args[5:])

				"""–°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
				bs_data[art] = {
					"URL_PHOTO": URL_photo,
					"URL_SITE": URL_site,
					"PRICE": int(price),
					"NAME": message_t,
					"Message_text": message_admin
				}
				save_basket_data(bs_data)

				"""–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ü–µ–Ω—É"""
				price_int = int(price)
				formatted_price = "{:,}".format(price_int).replace(',', ' ')

				message_text = f"üë©üèª‚Äçü¶∞üí¨ <b>–¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É.</b>\n\n" \
							   f"<b>‚Ä¢ </b><b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ:</b>\n" \
							   f"<b>‚Ü≥ </b><b>–ê—Ä—Ç–∏–∫—É–ª: <code>{art}</code></b>\n" \
							   f"<b>‚Ü≥ </b><b>–°–∞–π—Ç —Ç–æ–≤–∞—Ä–∞:</b> <a href='{URL_site}'>–°—Å—ã–ª–∫–∞</a>\n" \
							   f"<b>‚Ü≥ </b><b>–ö—Ä–∞—Ç–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {message_t}</b>\n\n" \
							   f"<b>–¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞: üí∂ {formatted_price} </b>‚ÇΩ\n\n" \
							   f"<b>üí¨ –¢–µ–∫—Å—Ç —Ç–æ–≤–∞—Ä–∞: {message_admin}</b>"
				
				"""–í—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á—Ç–æ –≤—Å–µ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ"""
				await bot.send_photo(chat_id=message.chat.id, photo=f"{URL_photo}", caption=message_text)

			except Exception:
				logging.exception("ERROR: 404 - BASKET: FUNC - ADD_BS_COMMAND")
	else:
		await message.answer("üë©üèª‚Äçü¶∞üí¨ <b>–£ –≤–∞—Å –Ω–µ—Ç—É –ø—Ä–∞–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.</b>")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /del_bs
@dp.message_handler(commands=['del_bs'])
async def del_bs_command(message: types.Message):
	"""–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –∞–¥–º–∏–Ω–æ–≤"""
	user_id = message.from_user.id
	admin_data = load_admin_data()

	if is_admin_in_data(user_id, admin_data):
		"""–†–∞–∑–±–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ –∞—Ä–≥—É–º–µ–Ω—Ç—ã"""
		args = message.get_args().split()

		if len(args) != 1:
			await message.answer("<b>üë©üèª‚Äçü¶∞üí¨ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É <code>/del_bs</code> [–ê—Ä—Ç–∏–∫—É–ª]</b>")
			return
		else:
			try:
				"""–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
				bs_data = load_basket_data()

				"""–ü–µ—Ä–µ–¥–∞–µ–º –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∏–∑ —Ç–µ–∫—Å—Ç–∞"""
				art = args[0]

				"""–°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∞—Ä—Ç–∏–∫—É–ª –∫–æ—Ç–æ—Ä—ã–π –≤–≤–µ–ª–∏ –∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
				if art in bs_data:
					del bs_data[art]

					save_basket_data(bs_data)
					
					await message.answer(f"üë©üèª‚Äçü¶∞üí¨ <b>–ê—Ä—Ç–∏–∫—É–ª —É–¥–∞–ª–µ–Ω –∏–∑ —Å–ø–∏—Å–∫–∞ ‚Ä¢ <code>{art}</code></b>")
				else:
					await message.answer(f"üë©üèª‚Äçü¶∞üí¨ <b>–ê—Ä—Ç–∏–∫—É–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ ‚Ä¢ <code>{art}</code></b>")

			except Exception:
				logging.exception("ERROR: 404 - BASKET: FUNC - DEL_BS_COMMAND")
	else:
		await message.answer("üë©üèª‚Äçü¶∞üí¨ <b>–£ –≤–∞—Å –Ω–µ—Ç—É –ø—Ä–∞–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.</b>")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /ct_bs
@dp.message_handler(commands=['ct_bs'])
async def ct_bs_command(message: types.Message):
	"""–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –∞–¥–º–∏–Ω–æ–≤"""
	user_id = message.from_user.id
	admin_data = load_admin_data()

	if is_admin_in_data(user_id, admin_data):
		"""–ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Ç–æ–≤–∞—Ä–∞—Ö –∏–∑ JSON —Ñ–∞–π–ª–∞"""
		bs_data = load_basket_data()

		try:
			if not bs_data:
				await message.answer("üë©üèª‚Äçü¶∞üí¨ <b>–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞.</b>")

			else:
				result_message = "üë©üèª‚Äçü¶∞üí¨ <b>–¢–æ–≤–∞—Ä—ã –≤ –∫–æ—Ä–∑–∏–Ω–µ:</b>\n\n"

				"""–î–µ–ª–∞–µ–º —Ü–∏–∫–ª –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–æ–¥–∏—Ç –Ω—É–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–∞—Ö"""
				for i, (art, item) in enumerate(bs_data.items(), start=1):

					message_text = item["NAME"]
					url_site_text = item["URL_SITE"]

					result_message += f"<b>{i} ‚Ä¢ [<code>{art}</code>] - {message_text} ‚Ä¢ </b><a href='{url_site_text}'>–°—Å—ã–ª–∫–∞</a>\n"

				await message.answer(result_message)

		except Exception:
			logging.exception("ERROR: 404 - BASKET: FUNC - CT_BS_COMMAND")
			
	else:
		await message.answer("üë©üèª‚Äçü¶∞üí¨ <b>–£ –≤–∞—Å –Ω–µ—Ç—É –ø—Ä–∞–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.</b>")