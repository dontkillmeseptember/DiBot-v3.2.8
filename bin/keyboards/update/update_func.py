from misc.util import (
	ReplyKeyboardMarkup,
	KeyboardButton,
	InlineKeyboardMarkup,
	InlineKeyboardButton,
	asyncio,
	types
)

from misc.loader import bot

from data import yml_loader
from data.start_db import load_user_data, is_user_in_data, save_user_data
from data.version_db import get_bot_version

from keyboards.main_menu import create_menu_keyboard
from keyboards.start.start_bot import start_bot

def keyboard_update_bot():
	# –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤–∫–ª–∞–¥–∫–∞–º–∏
	keyboard_update = ReplyKeyboardMarkup(resize_keyboard=True)
	keyboard_update.add(KeyboardButton(yml_loader.update_data["update_bot"]["button_update_bot"]))

	return keyboard_update

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–∫–ª–∞–¥–∫–∏ "–û–±–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞"
async def update_bot_handler(message, bot: types.Message):
	keyboard = keyboard_update_bot()

	# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–µ—Ä—Å–∏–∏
	user_id = message.from_user.id
	user_data = load_user_data()

	bot_version = get_bot_version()
	user_bot_version = user_data.get(str(user_id), {}).get("version_bot", "")

	if user_bot_version == bot_version:
		await message.answer(yml_loader.update_data["update_bot"]["version_check_info"])
	else:
		await bot.send_message(
				message.chat.id, 
				yml_loader.update_data["update_bot"]["button_update_bot_info"], 
				reply_markup=keyboard
			)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π –∑–∞–≥—Ä—É–∑–∫–∏
async def send_loading_message(chat_id):
	message_text = yml_loader.update_data["loading"]["loading_info"]
	loading_symbols = ["üåç", "üåé", "üåè"]  # Unicode-—Å–∏–º–≤–æ–ª—ã –∑–∞–≥—Ä—É–∑–∫–∏
	loading_animation = "".join(loading_symbols)  # –û–±—ä–µ–¥–∏–Ω—è–µ–º —Å–∏–º–≤–æ–ª—ã –∑–∞–≥—Ä—É–∑–∫–∏

	message = await bot.send_message(chat_id, f"{message_text} {loading_animation}")
	loading_message_id = message.message_id

	# –ê–Ω–∏–º–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
	for _ in range(30):  # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ü–∏–∫–ª 10 —Ä–∞–∑ –¥–ª—è –æ–∫–æ–ª–æ 5 —Å–µ–∫—É–Ω–¥
		for symbol in loading_symbols:
			await asyncio.sleep(0.005)
			await bot.edit_message_text(f"{message_text} {symbol}", chat_id=message.chat.id, message_id=message.message_id)

	# –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π –∑–∞–≥—Ä—É–∑–∫–∏
	await bot.delete_message(chat_id, loading_message_id)

	# –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
	inline_keyboard = InlineKeyboardMarkup()
	inline_keyboard.add(InlineKeyboardButton(yml_loader.update_data["loading"]["end_update_bot"], callback_data="next_update"))

	await bot.send_message(chat_id, yml_loader.update_data["loading"]["end_update_info"], reply_markup=inline_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–û–±–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞" —á—Ç–æ–±—ã –ø–æ—è–≤–ª—è–ª–∞—Å—å –∞–Ω–∏–º–∞—Ü–∏—è –∏ —Ç.–¥
async def update_bot_button_handler(message: types.Message):
	# –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π –∑–∞–≥—Ä—É–∑–∫–∏
	await send_loading_message(message.chat.id)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –≤–∫–ª–∞–¥–∫–∏ "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
async def main_menu_update_bot_handler(message: types.Message):
	keyboard = create_menu_keyboard(message)

	bot_version = get_bot_version()

	await bot.send_message(message.chat.id, f"{yml_loader.version_data['versions'][f'button_update_{bot_version}_info']}", reply_markup=keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–∂–∞ –≤–æ –≤–∫–ª–∞–¥–∫—É "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
async def process_callback_next_update(callback_query: types.CallbackQuery):
	# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
	user_id = callback_query.from_user.id
	user_data = load_user_data()

	bot_version = get_bot_version()

	if is_user_in_data(user_id, user_data):
		# –û–±–Ω–æ–≤–ª—è–µ–º version_bot –≤ user_data.json
		user_data[str(user_id)]["version_bot"] = bot_version
		save_user_data(user_data)

		await main_menu_update_bot_handler(callback_query.message)
		await bot.delete_message(callback_query.message.chat.id, callback_query.message.message_id)
	else:
		await start_bot(callback_query.message)
		await bot.delete_message(callback_query.message.chat.id, callback_query.message.message_id)