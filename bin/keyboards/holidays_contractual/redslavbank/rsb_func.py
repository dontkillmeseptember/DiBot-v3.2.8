from misc.util import InlineKeyboardMarkup, InlineKeyboardButton, types, State, StatesGroup, FSMContext, asyncio, random
from misc.loader import dp, bot

from data.rsb_db import load_rsb_data, is_rsb_in_data, save_rsb_data, check_rsb_data

from data.eth_db import (
	get_eth_wallet, 
	usd_formatted, 
	rub_formatted, 
	get_rub_to_usd_rate, 
	get_usd_to_rub_rate, 
	get_eth_to_rub_rate, 
	get_interest_walltet_igor, 
	get_interest_walltet_dinara, 
	calculate_interest, 
	calculate_interest_call, 
	interest_fines,
	interest_fines_call
)

from data.start_db import check_user_data

from datetime import datetime, timedelta

from data import yml_loader

class RegistrationState(StatesGroup):
	waiting_for_password_rsb = State()
	waiting_for_username_rsb = State()
	waiting_for_user_password_rsb = State()
	recovery_for_user_password_rsb = State()
	waiting_for_user_new_password_rsb = State()

class ChangeState(StatesGroup):
	change_for_username_rsb = State()
	change_for_password_rsb = State()
	waiting_remember_password_rsb = State()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è inline_keyboards
def office_menu():
	inline_keyboard = InlineKeyboardMarkup()
	inline_keyboard.add(InlineKeyboardButton(yml_loader.fines_data["rsb"]["button_settings"], callback_data="settings_rsb"))

	return inline_keyboard

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def private_office(message: types.Message, state: FSMContext):
	user_id = message.from_user.id

	"""–í—ã–≤–æ–¥–∏–º –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
	rsb_data = check_rsb_data(user_id)
	user_data = check_user_data(user_id)
	eth = get_eth_wallet()
	eth_to_usd = usd_formatted()
	eth_to_rub = rub_formatted()
	rub = get_rub_to_usd_rate()
	usd = get_usd_to_rub_rate()
	eth_to_rub_rate = get_eth_to_rub_rate()
	interest_igor = get_interest_walltet_igor()
	interest_dinara = get_interest_walltet_dinara()
	interest_summ = calculate_interest(message)
	interest = interest_fines(message)
	fines = user_data.get("fines", "ERROR")
	fines_slava = user_data.get("fines_slava", "ERROR")

	"""–í—ã–≤–æ–¥–∏–º –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
	user_name_rsb = rsb_data.get("username_rsb", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
	number_card_rsb = rsb_data.get("usercard_rsb", "ERROR")

	"""–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π fines —Å –ø—Ä–æ–±–µ–ª–∞–º–∏ –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è —Ç—ã—Å—è—á"""
	message_eth_to_rub_rate = eth_to_rub_rate

	formatted_usd = round(usd, 3)
	formatted_fines = "{:,}".format(fines).replace(',', ' ')
	formatted_fines_slava = "{:,}".format(fines_slava).replace(',', ' ')
	formatted_interest_summ = "{:,.0f}".format(interest_summ).replace(',', ' ')
	formatted_eth_to_rub_rate = "{:,}".format(message_eth_to_rub_rate).replace(',', ' ')

	"""–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–∞—Ç—ã, –º–µ—Å—è—Ü–∞ –∏ –≥–æ–¥–∞ –¥–ª—è –ø–ª–∞—Ç–µ–∂–∞"""
	current_date = datetime.now()

	if current_date.day >= 26:
		current_date += timedelta(days=30)  # –î–æ–±–∞–≤–ª—è–µ–º 5 –¥–Ω–µ–π (–¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –º–µ—Å—è—Ü–∞)
		if current_date.month == 13:  # –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü —Å—Ç–∞–ª 13, –æ–±–Ω–æ–≤–ª—è–µ–º –∏ –≥–æ–¥
			current_date = current_date.replace(month=1, year=current_date.year + 1)
	
	formatted_date = current_date.strftime("%d.%m.%y")

	inline_keyboard = office_menu()

	message_text = f"<b>üë©üèª‚Äçü¶∞üí¨ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≤–∞—à—É —É—á–µ—Ç–Ω—É—é –∑–∞–ø–∏—Å—å, {user_name_rsb}.</b>\n\n" \
				   f"<b> ‚Ä¢ –í–∞—à –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã: üí≥ <code>{number_card_rsb}</code></b>\n\n" \
				   f"<b> ‚Ä¢ –í–∞—à–∞ –æ–±—â–∞—è —Å—É–º–º–∞ —à—Ç—Ä–∞—Ñ–æ–≤/–¥–æ–ª–≥–æ–≤: üí∑ {formatted_fines} </b>‚ÇΩ<b> ~ {formatted_fines_slava} </b>‚ÇΩ\n" \
				   f"<b> ‚Ä¢ –í–∞—à –æ–±—â–∏–π –±—é–¥–∂–µ—Ç: üí∑ {eth} ETH ‚Äî {eth_to_usd} $ ~ {eth_to_rub} </b>‚ÇΩ\n\n" \
				   f"<b> ‚Ä¢ –í–∞—à –≤–∫–ª–∞–¥ –≤ %: üßëüèª {interest_igor}% ~ {interest_dinara}% üë©üèª‚Äçü¶∞</b>\n\n" \
				   f"<b> ‚Ä¢ –¢–µ–∫—É—â–∏–π –∫—É—Ä—Å —Ä—É–±–ª—è: üí¥ 1 </b>‚ÇΩ<b> ~ {formatted_usd} $</b>\n" \
				   f"<b> ‚Ä¢ –¢–µ–∫—É—â–∏–π –∫—É—Ä—Å –¥–æ–ª–ª–∞—Ä–∞: üíµ 1 $ ~ {rub} </b>‚ÇΩ\n\n" \
				   f"<b> ‚Ä¢ –¢–µ–∫—É—â–∏–π –∫—É—Ä—Å ETH: üí∂ 1 ETH ~ {formatted_eth_to_rub_rate} </b>‚ÇΩ\n\n" \
				   f"<b> ‚Ä¢ –í–∞—à –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ø–ª–∞—Ç–µ–∂: „ÄΩÔ∏è {interest}% ~ {formatted_interest_summ} </b>‚ÇΩ\n\n" \
				   f"<b>‚ú† –û–ø–ª–∞—Ç–∏—Ç—å —à—Ç—Ä–∞—Ñ –¥–æ ‚Ä¢ {formatted_date}.</b>"

	await message.answer(message_text, reply_markup=inline_keyboard)

	await state.finish()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞—Ä–µ–≥–∞–ª—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–Ω–∫ –∏–ª–∏ –Ω–µ—Ç
async def check_user_rsb(message: types.Message, state: FSMContext):
	"""–ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω"""
	user_id = message.from_user.id
	rsb_data = load_rsb_data()

	"""–ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ–µ –∏–º"""
	user = message.from_user
	userlastname = user.first_name

	"""
	–ü—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü–∏—é is_rsb_in_data  
	–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, —Ç–æ –æ–Ω –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—Å—è –Ω–∞ —Å—Ç–∞–¥–∏—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
	"""
	if is_rsb_in_data(user_id, rsb_data):
		"""–í—ã–≤–æ–¥–∏—Ç –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ, –∑–∞–ø–æ–º–Ω–∏–ª –æ–Ω –ø–∞—Ä–æ–ª—å –∏–ª–∏ –Ω–µ—Ç"""
		user_data = check_rsb_data(user_id)
		user_remember_password_rsb = user_data.get("remember_password")

		try:
			if user_remember_password_rsb == True:
				await private_office(message, state)
			elif user_remember_password_rsb == False:
				user_data = check_rsb_data(user_id)
				user_name_rsb = user_data.get("username_rsb", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")

				"""–û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤—Ä–µ–º—è —Å—É—Ç–æ–∫ –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
				import datetime
				now = datetime.datetime.now()
				current_hour = now.hour

				if 6 <= current_hour < 12:
					greeting = "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ"
					greeting_smile = "üåÑ"
				elif 12 <= current_hour < 18:
					greeting = "–î–æ–±—Ä—ã–π –¥–µ–Ω—å"
					greeting_smile = "üèû"
				elif 18 <= current_hour < 24:
					greeting = "–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä"
					greeting_smile = "üåÖ"
				else:
					greeting = "–î–æ–±—Ä–æ–π –Ω–æ—á–∏"
					greeting_smile = "üåå"

				await message.answer(f"<b>üë©üèª‚Äçü¶∞üí¨ {greeting}, {user_name_rsb} ‚Ä¢ {greeting_smile}\n\n</b>"
									"<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –ø–∞—Ä–æ–ª—å –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –≤–∞—à–µ–π —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏ –±–∞–Ω–∫–∞.</b>")

				"""–ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–¥—Ç–≤–µ–∂–¥–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ–≥–¥–∞ –æ–Ω —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –≤ –±–∞–Ω–∫–µ."""
				await RegistrationState.waiting_for_user_password_rsb.set()
		except Exception:
			await message.answer("<b>üë©üèª‚Äçü¶∞üí¨ –ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±–∞–Ω–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ, –º—ã —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ–º –Ω–µ–ø–æ–ª–∞–¥–æ–∫.\n\n–ú—ã –ø—Ä–∏–Ω–æ—Å–∏–º –∏–∑–≤–∏–Ω–µ–Ω–∏—è –∑–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞ –∏ –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Å–µ—Ä–≤–∏—Å—É –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ.\n\n–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ —Ç–µ—Ä–ø–µ–Ω–∏–µ. ü§ç</b>")
	else:
		await message.answer(f"<b>üë©üèª‚Äçü¶∞üí¨ {userlastname} –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤–æ –≤–∫–ª–∞–¥–∫—É ‚Ä¢ üìÅüí≥ RedSlavBank\n\n</b>"
					   		 "<b>RedSlavBank ‚Äî —ç—Ç–æ –≤–∞—à –Ω–∞–¥–µ–∂–Ω—ã–π –ø–∞—Ä—Ç–Ω–µ—Ä –≤ –º–∏—Ä–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤. –ú—ã –≥–æ—Ç–æ–≤—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –≤–∞–º —à–∏—Ä–æ–∫–∏–π —Å–ø–µ–∫—Ç—Ä –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö —É—Å–ª—É–≥ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –≤–∞—à–∏—Ö —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Ü–µ–ª–µ–π.\n\n</b>"
							 "<b>–ß—Ç–æ–±—ã –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –Ω–∞—à–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≤–∞—à–µ –∏–º—è –Ω–∏–∂–µ, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –ª—É—á—à–µ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç—å –≤–∞—à–∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏.</b>")

		"""–ó–∞–ø—Ä–æ—Å –Ω–∞ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á—Ç–æ–±—ã –æ–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–ª–æ—Å—å –≤ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏."""
		await RegistrationState.waiting_for_username_rsb.set()

# –û–±–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
@dp.message_handler(state=RegistrationState.waiting_for_username_rsb)
async def create_user_name_rsb(message: types.Message):
	"""–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —Å–≤–æ–µ –∏–º—è –∏ –∫–∞–∫ –∫ –Ω–µ–º—É –æ–±—Ä–∞—â–∞—Ç—å—Å—è"""
	user = message.text

	"""–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö"""
	user_id = message.from_user.id

	rsb_data = load_rsb_data()

	"""–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ—Ç—É –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
	if not is_rsb_in_data(user_id, rsb_data):
		"""–°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
		rsb_data[str(user_id)] = {
			"username_rsb": user,
			"userpassword_rsb": None,
			"usercard_rsb": None,
			"remember_password": False,
			"userchangepassword_rsb": False
		}
		save_rsb_data(rsb_data)

		await message.answer(f"<b>üë©üèª‚Äçü¶∞üí¨ –û—Ç–ª–∏—á–Ω–æ, —Ç–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –≤–∞—à–µ–º—É –∞–∫–∫–∞—É–Ω—Ç—É –≤ RedSlavBank.</b>\n\n" 
					   		  "<b>–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 8 —Å–∏–º–≤–æ–ª–æ–≤ –∏ –≤–∫–ª—é—á–∞—Ç—å –±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤–∞—à–µ–π —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏.</b>")

		await RegistrationState.waiting_for_password_rsb.set()
	else:
		print("ERROR: 404 - RSB: FUNC - CREATE_USER_NAME_RSB")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –ø–∞—Ä–æ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@dp.message_handler(state=RegistrationState.waiting_for_password_rsb)
async def create_user_password_rsb(message: types.Message, state: FSMContext):
	"""–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —Å–≤–æ–π –ø–∞—Ä–æ–ª—å –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –±–∞–Ω–∫"""
	user_password = message.text

	"""–ü—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö"""
	user_id = message.from_user.id

	rsb_data = load_rsb_data()

	"""–ü—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ –Ω–µ—Ç"""
	if is_rsb_in_data(user_id, rsb_data):
		"""–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –≤–≤–µ—Å—Ç–∏ –ø–∞—Ä–æ–ª—å –Ω–µ –º–µ–Ω–µ–µ –∏–∑ 8 —Å–∏–º–≤–æ–ª–æ–≤, –∏–Ω–∞—á–µ –æ–Ω –ø–æ–ª—É—á–∏—Ç –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ, —á—Ç–æ –ø–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 8 —Å–∏–º–ª–æ–≤"""
		if len(user_password) < 8 or not any(char.isalpha() for char in user_password) or not any(char.isdigit() for char in user_password):
			await message.answer(f"<b>üë©üèª‚Äçü¶∞üí¨ –ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 8 —Å–∏–º–≤–æ–ª–æ–≤ –∏ –≤–∫–ª—é—á–∞—Ç—å –±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.</b>")
		else:
			"""–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–º–µ—Ä –∫–∞—Ç–æ—á–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
			card_number = ''.join([str(random.randint(0, 9)) for _ in range(16)])

			formatted_card_number = ' '.join([card_number[i:i+4] for i in range(0, 16, 4)])

			"""–°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–∞—Ä–æ–ª—å –∏ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
			rsb_data[str(user_id)]["userpassword_rsb"] = user_password
			rsb_data[str(user_id)]["usercard_rsb"] = formatted_card_number
			save_rsb_data(rsb_data)

			"""–í—ã–≤–æ–¥–∏–º –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
			user_data = check_rsb_data(user_id)
			user_name_rsb = user_data.get("username_rsb", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")

			"""–°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—Ö–æ–¥–∞ –≤ —É—á–µ—Ç–Ω—É—é –∑–∞–ø–∏—Å—å"""
			inline_keyboard = InlineKeyboardMarkup()
			inline_keyboard.add(InlineKeyboardButton(yml_loader.fines_data["rsb"]["button_input_profille"], callback_data="back_profile_rsb"))

			await message.answer(f"<b>üë©üèª‚Äçü¶∞üí¨ {user_name_rsb}, –ü—Ä–µ–∫—Ä–∞—Å–Ω–æ! –í–∞—à –∞–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω. –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤—Å–µ–º–∏ —É—Å–ª—É–≥–∞–º–∏ RedSlavBank –∏ —Å–ª–µ–¥–∏—Ç—å –∑–∞ —Å–≤–æ–∏–º–∏ —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏.</b>\n\n"
								  "<b>‚ùï –ù–µ –∑–∞–±—É–¥—å—Ç–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–≤–æ–π –ø–∞—Ä–æ–ª—å –≤ –Ω–∞–¥–µ–∂–Ω–æ–º –º–µ—Å—Ç–µ –∏ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –Ω–µ–º—É –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ, —á—Ç–æ–±—ã –æ–±–µ—Å–ø–µ—á–∏—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –≤–∞—à–µ–π —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏. –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ RedSlavBank!</b>", reply_markup=inline_keyboard)

			await state.finish()

	else:
		print("ERROR: 404 - RSB: FUNC - CREATE_USER_PASSWORD_RSB")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –±–∞–Ω–∫
@dp.message_handler(state=RegistrationState.waiting_for_user_password_rsb)
async def create_user_password_rsb(message: types.Message, state: FSMContext):
	"""–í—ã–≤–æ–¥–∏–º –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø–∞—Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
	user_id = message.from_user.id
	user_data = check_rsb_data(user_id)
	user_password_rsb = user_data.get("userpassword_rsb")

	"""–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —Å–≤–æ–π –ø–∞—Ä–æ–ª—å –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –±–∞–Ω–∫"""
	user_password = message.text

	"""–°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –ø–∞—Ä–æ–ª–∏"""
	if user_password == user_password_rsb:
		await private_office(message, state)

		await state.finish()
	else:
		"""–°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è"""
		inline_keyboard = InlineKeyboardMarkup()
		inline_keyboard.add(InlineKeyboardButton(yml_loader.fines_data["rsb"]["button_recovery_password"], callback_data="recovery_password"))

		await message.answer("<b>üë©üèª‚Äçü¶∞üí¨ –ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –≤–≤–µ–¥–µ–Ω–Ω—ã–π –≤–∞–º–∏ –ø–∞—Ä–æ–ª—å –Ω–µ–≤–µ—Ä–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.</b>\n\n" 
					   		 "<b>‚ùï –ï—Å–ª–∏ –≤—ã –∑–∞–±—ã–ª–∏ —Å–≤–æ–π –ø–∞—Ä–æ–ª—å, –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ñ—É–Ω–∫—Ü–∏–µ–π –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è.</b>", reply_markup=inline_keyboard)

		await state.finish()

# –û–±–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è
@dp.callback_query_handler(lambda c: c.data == 'recovery_password')
async def start_recovery_user_password(callback_query: types.CallbackQuery):
	await bot.edit_message_text("<b>üë©üèª‚Äçü¶∞üí¨ –î–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à user_id.</b>", callback_query.from_user.id, callback_query.message.message_id)

	await RegistrationState.recovery_for_user_password_rsb.set()

@dp.message_handler(state=RegistrationState.recovery_for_user_password_rsb)
async def recovery_user_password(message: types.Message):
	"""–ë–µ—Ä–µ–º user_id –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ —Å—Ä–∞–Ω–∏–≤–∞–µ–º –µ–≥–æ —Å –≤–≤–µ–¥–µ–Ω–µ–º user_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"""
	user_id = message.text
	rsb_data = load_rsb_data()

	if user_id in rsb_data:
		await message.answer("<b>üë©üèª‚Äçü¶∞üí¨ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å.\n\n‚ùï –ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 8 —Å–∏–º–≤–æ–ª–æ–≤ –∏ –≤–∫–ª—é—á–∞—Ç—å –±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤–∞—à–µ–π —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏.</b>")

		await RegistrationState.waiting_for_user_new_password_rsb.set()
	else:
		await message.answer("<b>üë©üèª‚Äçü¶∞üí¨ –ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –≤–≤–µ–¥–µ–Ω–Ω—ã–π –≤–∞–º–∏ user_id –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –Ω–∞—à–µ–π —Å–∏—Å—Ç–µ–º–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –≤–≤–µ–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.</b>")

@dp.message_handler(state=RegistrationState.waiting_for_user_new_password_rsb)
async def recovery_user_new_password(message: types.Message, state: FSMContext):
	"""–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –±–∞–Ω–∫"""
	user_new_password = message.text

	"""–ü—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö"""
	user_id = message.from_user.id

	rsb_data = load_rsb_data()

	"""–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –≤–≤–µ—Å—Ç–∏ –ø–∞—Ä–æ–ª—å –Ω–µ –º–µ–Ω–µ–µ –∏–∑ 8 —Å–∏–º–≤–æ–ª–æ–≤, –∏–Ω–∞—á–µ –æ–Ω –ø–æ–ª—É—á–∏—Ç –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ, —á—Ç–æ –ø–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 8 —Å–∏–º–ª–æ–≤"""
	if len(user_new_password) < 8 or not any(char.isalpha() for char in user_new_password) or not any(char.isdigit() for char in user_new_password):
		await message.answer(f"<b>üë©üèª‚Äçü¶∞üí¨ –ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 8 —Å–∏–º–≤–æ–ª–æ–≤ –∏ –≤–∫–ª—é—á–∞—Ç—å –±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.</b>")
	else:
		"""–°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–∞—Ä–æ–ª—å –∏ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
		rsb_data[str(user_id)]["userpassword_rsb"] = user_new_password
		save_rsb_data(rsb_data)

		"""–í—ã–≤–æ–¥–∏–º –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
		user_data = check_rsb_data(user_id)
		user_name_rsb = user_data.get("username_rsb", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")

		"""–í—ã–≤–æ–¥–∏–º –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Ñ–∞–∑—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
		phase_change_password = user_data.get("userchangepassword_rsb")

		await message.answer(f"<b>üë©üèª‚Äçü¶∞üí¨ {user_name_rsb}, –û—Ç–ª–∏—á–Ω–æ! –í–∞—à –ø–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω.</b>\n\n"
					   		  "<b>–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –¥–ª—è –≤—Ö–æ–¥–∞ –≤ —Å–≤–æ—é —É—á–µ—Ç–Ω—É—é –∑–∞–ø–∏—Å—å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –µ–≥–æ –≤ –Ω–∞–¥–µ–∂–Ω–æ–º –º–µ—Å—Ç–µ –∏ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –Ω–µ–º—É –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ, —á—Ç–æ–±—ã –æ–±–µ—Å–ø–µ—á–∏—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞.</b>")
		
		await asyncio.sleep(2)

		"""–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∫–∞—è —Ñ–∞–∑–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç"""
		if phase_change_password == True:
			rsb_data[str(user_id)]["userchangepassword_rsb"] = False
			rsb_data[str(user_id)]["remember_password"] = False
			save_rsb_data(rsb_data)

			await private_office(message, state)
		elif phase_change_password == False:
			rsb_data[str(user_id)]["remember_password"] = False
			save_rsb_data(rsb_data)

			await check_user_rsb(message)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–∏–∫ –±–∞–Ω–∫–∞
@dp.callback_query_handler(lambda c: c.data == 'settings_rsb')
async def menu_settings_rsb(callback_query: types.CallbackQuery):
	"""–í—ã–≤–æ–¥–∏—Ç –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ, –∑–∞–ø–æ–º–Ω–∏–ª –æ–Ω –ø–∞—Ä–æ–ª—å –∏–ª–∏ –Ω–µ—Ç"""
	user = callback_query.from_user
	user_id = user.id

	user_data = check_rsb_data(user_id)
	user_remember_password_rsb = user_data.get("remember_password")

	if user_remember_password_rsb == True:
		"""–°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤—ã–±–æ—Ä–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
		inline_keyboard = InlineKeyboardMarkup()
		inline_keyboard.row(
			InlineKeyboardButton(yml_loader.fines_data["rsb"]["button_password"], callback_data="change_password_rsb"),
			InlineKeyboardButton(yml_loader.fines_data["rsb"]["button_off_remember_password"], callback_data="off_remember_password_rsb")
		)
		inline_keyboard.add(InlineKeyboardButton(yml_loader.fines_data["rsb"]["button_name"], callback_data="change_name_rsb"))
		inline_keyboard.add(InlineKeyboardButton(yml_loader.language_path["language"]["button_back"], callback_data="back_profile_rsb"))

		await bot.edit_message_text(yml_loader.fines_data["rsb"]["settings_info"], callback_query.message.chat.id, callback_query.message.message_id, reply_markup=inline_keyboard)

	elif user_remember_password_rsb == False:
		"""–°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤—ã–±–æ—Ä–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
		inline_keyboard = InlineKeyboardMarkup()
		inline_keyboard.row(
			InlineKeyboardButton(yml_loader.fines_data["rsb"]["button_password"], callback_data="change_password_rsb"),
			InlineKeyboardButton(yml_loader.fines_data["rsb"]["button_remember_password"], callback_data="remember_password_rsb")
		)
		inline_keyboard.add(InlineKeyboardButton(yml_loader.fines_data["rsb"]["button_name"], callback_data="change_name_rsb"))
		inline_keyboard.add(InlineKeyboardButton(yml_loader.language_path["language"]["button_back"], callback_data="back_profile_rsb"))

		await bot.edit_message_text(yml_loader.fines_data["rsb"]["settings_info"], callback_query.message.chat.id, callback_query.message.message_id, reply_markup=inline_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∑–∞–±—ã–≤–∞–Ω–∏—è –ø–∞—Ä–æ–ª—è
@dp.callback_query_handler(lambda c: c.data == 'off_remember_password_rsb')
async def remember_password_rsb(callback_query: types.CallbackQuery):
	await bot.edit_message_text("<b>üë©üèª‚Äçü¶∞üí¨ –î–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–∞—Ä–æ–ª—è –∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –≤–≤–æ–¥—É –ø–∞—Ä–æ–ª—è –ø—Ä–∏ –∫–∞–∂–¥–æ–º –≤—Ö–æ–¥–µ, –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Å–≤–æ—é –ª–∏—á–Ω–æ—Å—Ç—å.\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ç–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å, —á—Ç–æ–±—ã –≤—ã–ø–æ–ª–Ω–∏—Ç—å —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤–≤–æ–¥—É –ø–∞—Ä–æ–ª—è –ø—Ä–∏ –≤—Ö–æ–¥–µ.</b>", callback_query.from_user.id, callback_query.message.message_id)

	await ChangeState.waiting_remember_password_rsb.set()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–∞—Ä–æ–ª—è
@dp.callback_query_handler(lambda c: c.data == 'remember_password_rsb')
async def remember_password_rsb(callback_query: types.CallbackQuery):
	await bot.edit_message_text("<b>üë©üèª‚Äçü¶∞üí¨ –î–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –≤—Ö–æ–¥–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ç–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å.</b>", callback_query.from_user.id, callback_query.message.message_id)

	await ChangeState.waiting_remember_password_rsb.set()

@dp.message_handler(state=ChangeState.waiting_remember_password_rsb)
async def remember_uses_password(message: types.Message, state: FSMContext):
	"""–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —Å–≤–æ–π —Ç–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å"""
	user_message_password = message.text
	user_id = message.from_user.id

	"""–í—ã–≤–æ–¥–∏–º –ø–∞—Ä–æ–ª—å –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∞—Ä–æ–ª—è"""
	user_data = check_rsb_data(user_id)
	user_password_rsb = user_data.get("userpassword_rsb")

	if user_message_password in user_password_rsb:
		"""–í—ã–≤–æ–¥–∏—Ç –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ, –∑–∞–ø–æ–º–Ω–∏–ª –æ–Ω –ø–∞—Ä–æ–ª—å –∏–ª–∏ –Ω–µ—Ç"""
		user_data = check_rsb_data(user_id)
		user_remember_password_rsb = user_data.get("remember_password")

		if user_remember_password_rsb == True:
			"""–°–æ—Ö—Ä–∞–Ω—è–µ–º —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–∫–ª—é—á–∏–ª —ç—Ç—É —Ñ—É–∫–Ω—Ü–∏—é"""
			rsb_data = load_rsb_data()

			rsb_data[str(user_id)]["remember_password"] = False
			save_rsb_data(rsb_data)

			await message.answer("<b>üë©üèª‚Äçü¶∞üí¨ –§—É–Ω–∫—Ü–∏—è –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–∞—Ä–æ–ª—è —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–∞. –¢–µ–ø–µ—Ä—å –ø—Ä–∏ –≤—Ö–æ–¥–µ –≤ –∞–∫–∫–∞—É–Ω—Ç –≤–∞–º –±—É–¥–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–æ–¥–∏—Ç—å –ø–∞—Ä–æ–ª—å –∫–∞–∂–¥—ã–π —Ä–∞–∑.\n\n–ï—Å–ª–∏ –≤—ã –≤ –±—É–¥—É—â–µ–º –∑–∞—Ö–æ—Ç–∏—Ç–µ —Å–Ω–æ–≤–∞ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π, –≤—ã —Å–º–æ–∂–µ—Ç–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ—ë –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –≤–∞—à–µ–π —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏.</b>")

			await asyncio.sleep(2)

			await private_office(message, state)

		elif user_remember_password_rsb == False:
			"""–°–æ—Ö—Ä–∞–Ω—è–µ–º —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–∫–ª—é—á–∏–ª —ç—Ç—É —Ñ—É–∫–Ω—Ü–∏—é"""
			rsb_data = load_rsb_data()

			rsb_data[str(user_id)]["remember_password"] = True
			save_rsb_data(rsb_data)

			await message.answer("<b>üë©üèª‚Äçü¶∞üí¨ –û—Ç–ª–∏—á–Ω–æ! –í–∞—à –ø–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–º–Ω–µ–Ω, –∏ –≤–∞–º –±–æ–ª—å—à–µ –Ω–µ –ø—Ä–∏–¥–µ—Ç—Å—è –≤–≤–æ–¥–∏—Ç—å –µ–≥–æ –ø—Ä–∏ –≤—Ö–æ–¥–µ –≤ –∞–∫–∫–∞—É–Ω—Ç.</b>")

			await asyncio.sleep(2)

			await private_office(message, state)
	else:
		await message.answer("<b>üë©üèª‚Äçü¶∞üí¨ –ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –≤–≤–µ–¥–µ–Ω–Ω—ã–π –≤–∞–º–∏ –ø–∞—Ä–æ–ª—å –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –Ω–∞—à–µ–π —Å–∏—Å—Ç–µ–º–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –≤–≤–µ–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å, –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.</b>")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–º–µ–Ω–∞ –∏–º–µ–Ω–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@dp.callback_query_handler(lambda c: c.data == 'change_name_rsb')
async def change_name_rsb(callback_query: types.CallbackQuery):
	await bot.edit_message_text("<b>üë©üèª‚Äçü¶∞üí¨ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å.</b>", callback_query.from_user.id, callback_query.message.message_id)

	await ChangeState.change_for_username_rsb.set()

@dp.message_handler(state=ChangeState.change_for_username_rsb)
async def change_uses_name(message: types.Message, state: FSMContext):
	"""–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —Å–≤–æ–µ –Ω–æ–≤–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
	user_message_name = message.text
	user_id = message.from_user.id

	"""–°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –Ω–æ–≤–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
	rsb_data = load_rsb_data()

	rsb_data[str(user_id)]["username_rsb"] = user_message_name
	save_rsb_data(rsb_data)

	await message.answer(f"<b>üë©üèª‚Äçü¶∞üí¨ –í–∞—à–µ –∏–º—è —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ. –¢–µ–ø–µ—Ä—å –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è ‚Ä¢ {user_message_name}.</b>")

	await asyncio.sleep(2)

	await private_office(message, state)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@dp.callback_query_handler(lambda c: c.data == 'change_password_rsb')
async def change_password_rsb(callback_query: types.CallbackQuery):
	"""–°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è"""
	inline_keyboard = InlineKeyboardMarkup()
	inline_keyboard.add(InlineKeyboardButton(yml_loader.fines_data["rsb"]["button_recovery_password"], callback_data="recovery_password"))

	await bot.edit_message_text("<b>üë©üèª‚Äçü¶∞üí¨ –î–ª—è —Å–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à —Å—Ç–∞—Ä—ã–π –ø–∞—Ä–æ–ª—å.</b>\n\n"
							 	"<b>‚ùï –ï—Å–ª–∏ –≤—ã –∑–∞–±—ã–ª–∏ —Å–≤–æ–π –ø–∞—Ä–æ–ª—å, –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ñ—É–Ω–∫—Ü–∏–µ–π –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è.</b>", callback_query.from_user.id, callback_query.message.message_id, reply_markup=inline_keyboard)

	await ChangeState.change_for_password_rsb.set()

@dp.message_handler(state=ChangeState.change_for_password_rsb)
async def change_user_password(message: types.Message):
	"""–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —Å—Ç–∞—Ä—ã–π –ø–∞—Ä–æ–ª—å –∏ –∏–¥–µ—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ"""
	user_message_password = message.text
	user_id = message.from_user.id

	rsb_data = check_rsb_data(user_id)
	old_user_password = rsb_data.get("userpassword_rsb")

	if user_message_password in old_user_password:
		"""–í–≤–æ–¥–∏—Ç —Ç—Ä–∏–≥–≥–µ—Ä –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π —Ñ—É–Ω–∫—Ü–∏–∏, —á—Ç–æ–±—ã —Ç–∞ –ø—Ä–æ–≤–µ—Ä—è–ª–∞ –≤ –∫–∞–∫–æ–π —Ñ–∞–∑–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è"""
		rsb_data = load_rsb_data()

		rsb_data[str(user_id)]["userchangepassword_rsb"] = True
		save_rsb_data(rsb_data)

		await message.answer("<b>üë©üèª‚Äçü¶∞üí¨ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å.\n\n‚ùï –ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 8 —Å–∏–º–≤–æ–ª–æ–≤ –∏ –≤–∫–ª—é—á–∞—Ç—å –±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤–∞—à–µ–π —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏.</b>")

		await RegistrationState.waiting_for_user_new_password_rsb.set()
	else:
		await message.answer("<b>üë©üèª‚Äçü¶∞üí¨ –ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –≤–≤–µ–¥–µ–Ω–Ω—ã–π –≤–∞–º–∏ –ø–∞—Ä–æ–ª—å –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –Ω–∞—à–µ–π —Å–∏—Å—Ç–µ–º–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –≤–≤–µ–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å, –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.</b>")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def profile_rsb(callback_query: types.CallbackQuery, state: FSMContext):
	user = callback_query.from_user
	user_id = user.id

	"""–í—ã–≤–æ–¥–∏–º –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
	rsb_data = check_rsb_data(user_id)
	user_data = check_user_data(user_id)
	eth = get_eth_wallet()
	eth_to_usd = usd_formatted()
	eth_to_rub = rub_formatted()
	rub = get_rub_to_usd_rate()
	usd = get_usd_to_rub_rate()
	eth_to_rub_rate = get_eth_to_rub_rate()
	interest_igor = get_interest_walltet_igor()
	interest_dinara = get_interest_walltet_dinara()
	interest_summ = calculate_interest_call(callback_query)
	interest = interest_fines_call(callback_query)
	fines = user_data.get("fines", "ERROR")
	fines_slava = user_data.get("fines_slava", "ERROR")

	"""–í—ã–≤–æ–¥–∏–º –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
	user_name_rsb = rsb_data.get("username_rsb", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
	number_card_rsb = rsb_data.get("usercard_rsb", "ERROR")

	"""–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π fines —Å –ø—Ä–æ–±–µ–ª–∞–º–∏ –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è —Ç—ã—Å—è—á"""
	message_eth_to_rub_rate = eth_to_rub_rate

	formatted_usd = round(usd, 3)
	formatted_fines = "{:,}".format(fines).replace(',', ' ')
	formatted_fines_slava = "{:,}".format(fines_slava).replace(',', ' ')
	formatted_interest_summ = "{:,.0f}".format(interest_summ).replace(',', ' ')
	formatted_eth_to_rub_rate = "{:,}".format(message_eth_to_rub_rate).replace(',', ' ')

	"""–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–∞—Ç—ã, –º–µ—Å—è—Ü–∞ –∏ –≥–æ–¥–∞ –¥–ª—è –ø–ª–∞—Ç–µ–∂–∞"""
	current_date = datetime.now()

	if current_date.day >= 26:
		current_date += timedelta(days=30)  # –î–æ–±–∞–≤–ª—è–µ–º 5 –¥–Ω–µ–π (–¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –º–µ—Å—è—Ü–∞)
		if current_date.month == 13:  # –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü —Å—Ç–∞–ª 13, –æ–±–Ω–æ–≤–ª—è–µ–º –∏ –≥–æ–¥
			current_date = current_date.replace(month=1, year=current_date.year + 1)
	
	formatted_date = current_date.strftime("%d.%m.%y")

	inline_keyboard = office_menu()

	message_text = f"<b>üë©üèª‚Äçü¶∞üí¨ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≤–∞—à—É —É—á–µ—Ç–Ω—É—é –∑–∞–ø–∏—Å—å, {user_name_rsb}.</b>\n\n" \
				   f"<b> ‚Ä¢ –í–∞—à –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã: üí≥ <code>{number_card_rsb}</code></b>\n\n" \
				   f"<b> ‚Ä¢ –í–∞—à–∞ –æ–±—â–∞—è —Å—É–º–º–∞ —à—Ç—Ä–∞—Ñ–æ–≤/–¥–æ–ª–≥–æ–≤: üí∑ {formatted_fines} </b>‚ÇΩ<b> ~ {formatted_fines_slava} </b>‚ÇΩ\n" \
				   f"<b> ‚Ä¢ –í–∞—à –æ–±—â–∏–π –±—é–¥–∂–µ—Ç: üí∑ {eth} ETH ‚Äî {eth_to_usd} $ ~ {eth_to_rub} </b>‚ÇΩ\n\n" \
				   f"<b> ‚Ä¢ –í–∞—à –≤–∫–ª–∞–¥ –≤ %: üßëüèª {interest_igor}% ~ {interest_dinara}% üë©üèª‚Äçü¶∞</b>\n\n" \
				   f"<b> ‚Ä¢ –¢–µ–∫—É—â–∏–π –∫—É—Ä—Å —Ä—É–±–ª—è: üí¥ 1 </b>‚ÇΩ<b> ~ {formatted_usd} $</b>\n" \
				   f"<b> ‚Ä¢ –¢–µ–∫—É—â–∏–π –∫—É—Ä—Å –¥–æ–ª–ª–∞—Ä–∞: üíµ 1 $ ~ {rub} </b>‚ÇΩ\n\n" \
				   f"<b> ‚Ä¢ –¢–µ–∫—É—â–∏–π –∫—É—Ä—Å ETH: üí∂ 1 ETH ~ {formatted_eth_to_rub_rate} </b>‚ÇΩ\n\n" \
				   f"<b> ‚Ä¢ –í–∞—à –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ø–ª–∞—Ç–µ–∂: „ÄΩÔ∏è {interest}% ~ {formatted_interest_summ} </b>‚ÇΩ\n\n" \
				   f"<b>‚ú† –û–ø–ª–∞—Ç–∏—Ç—å —à—Ç—Ä–∞—Ñ –¥–æ ‚Ä¢ {formatted_date}.</b>"

	await bot.edit_message_text(message_text, chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, reply_markup=inline_keyboard)

	await state.finish()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥"
@dp.callback_query_handler(lambda c: c.data == 'back_profile_rsb')
async def back_p_rsb(callback_query: types.CallbackQuery, state: FSMContext):
	await profile_rsb(callback_query, state)