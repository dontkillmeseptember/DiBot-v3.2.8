from misc.util import types, InlineKeyboardMarkup, InlineKeyboardButton, State, StatesGroup, FSMContext, logging
from misc.loader import dp, bot

from data.basket_db import load_basket_data, check_basket_data

class SearchState(StatesGroup):
	waiting_search_bs = State()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫–æ—Ä–∑–∏–Ω—ã —Ç–æ–≤–∞—Ä–æ–≤
async def basket_handler(message: types.Message):
	"""–°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–∫–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–∏—Å–∫–∞"""
	inline_keyboard = InlineKeyboardMarkup()
	inline_keyboard.add(InlineKeyboardButton("üîç –ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤", callback_data="search"))

	"""–ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Ç–æ–≤–∞—Ä–∞—Ö –∏–∑ JSON —Ñ–∞–π–ª–∞"""
	bs_data = load_basket_data()

	"""–¢–µ–∫—Å—Ç –¥–ª—è –≤–∫–ª–∞–¥–∫–∏"""
	message_basket = f"<b>üë©üèª‚Äçü¶∞üí¨ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤–æ –≤–∫–ª–∞–¥–∫—É ‚Ä¢ üìÅü•º –ö–æ—Ä–∑–∏–Ω–∞ –¢–æ–≤–∞—Ä–æ–≤</b>\n\n" \
					 f"<b>–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤ –∫–æ—Ä–∑–∏–Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è: üëú {len(bs_data)} –®–¢</b>\n\n" \
					 f"<b>–î–ª—è –ø–æ–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ‚Ä¢ üîç –ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤</b>\n\n" \
					 f"<b>–ú—ã –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å –≤–∞–º —Å –≤–∞—à–∏–º–∏ –ø–æ–∫—É–ø–∫–∞–º–∏!</b>"

	await message.answer(message_basket, reply_markup=inline_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤"
@dp.callback_query_handler(lambda c: c.data == 'search')
async def search_handler(callback_query: types.CallbackQuery):
	"""–ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Ç–æ–≤–∞—Ä–∞—Ö –∏–∑ JSON —Ñ–∞–π–ª–∞"""
	bs_data = load_basket_data()

	try:
		if not bs_data:
			await bot.edit_message_text("üë©üèª‚Äçü¶∞üí¨ <b>–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ —Ç–æ–≤–∞—Ä–æ–≤ –ø—É—Å—Ç–∞.</b>", callback_query.from_user.id, callback_query.message.message_id)
		else:
			"""–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –∫–Ω–æ–ø–∫–∏"""
			inline_keyboard = InlineKeyboardMarkup()
			inline_keyboard.add(InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –ø–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤", callback_data="off_search"))

			result_message = "üë©üèª‚Äçü¶∞üí¨ <b>–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ —Ç–æ–≤–∞—Ä–æ–≤.</b>\n\n" \
							 "<b>–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç:</b>\n\n"

			"""–î–µ–ª–∞–µ–º —Ü–∏–∫–ª –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–æ–¥–∏—Ç –Ω—É–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–∞—Ö"""
			for i, (art, item) in enumerate(bs_data.items(), start=1):

				message_text = item["NAME"]

				result_message += f"<b>{i} ‚Ä¢ [<code>{art}</code>] ‚Äî {message_text}</b>\n"

			result_message += "\n<b>–î–ª—è –ø–æ–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–∞ –∏–∑ —Å–ø–∏—Å–∫–∞, –≤–≤–µ–¥–∏—Ç–µ –∞—Ä—Ç–∏–∫—É–ª —Ç–æ–≤–∞—Ä–∞ –≤ –ø–æ–ª–µ –ø–æ–∏—Å–∫–∞ –Ω–∏–∂–µ.</b>"

			await bot.edit_message_text(result_message, callback_query.from_user.id, callback_query.message.message_id, reply_markup=inline_keyboard)

			await SearchState.waiting_search_bs.set()

	except Exception:
		logging.exception("ERROR: 404 - BASKET_FUNC: FUNC - SEARCH_HANDLER")

@dp.message_handler(state=SearchState.waiting_search_bs)
async def commodity(message: types.Message, state: FSMContext):
	"""–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç –∞—Ä—Ç–∏–∫—É–ª"""
	user_message_art = message.text

	"""–í—ã–≤–æ–¥–∏—Ç—Å—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∞—Ä—Ç–∏–∫—É–ª"""
	bs_data = check_basket_data(user_message_art)
	bs_data_load = load_basket_data()

	if user_message_art in bs_data_load:
		"""–í—ã–≤–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –≤–≤–µ–¥–µ–Ω–æ–≥–æ –∞—Ä—Ç–∏–∫—É–ª–∞"""
		URL_ph = bs_data.get("URL_PHOTO")
		name_product = bs_data.get("NAME", "ERROR")
		message_product = bs_data.get("Message_text", "ERROR")
		url_site = bs_data.get("URL_SITE")
		price_product = bs_data.get("PRICE", "ERROR")

		"""–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ü–µ–Ω—É"""
		price_int = int(price_product)
		formatted_price = "{:,}".format(price_int).replace(',', ' ')

		"""–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –∫–Ω–æ–ø–∫–∏"""
		inline_keyboard = InlineKeyboardMarkup()
		inline_keyboard.add(InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –ø–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤", callback_data="off_search_two"))

		"""–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ"""
		message_text = f"<b>üë©üèª‚Äçü¶∞üí¨ –¢–æ–≤–∞—Ä –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã.</b>\n\n" \
					   f"<b><a href='{url_site}'>{name_product}</a> ‚Ä¢ {user_message_art}</b>\n\n" \
					   f"<b>üí¨ {message_product}</b>\n\n" \
					   f"<b>–¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞: üí∂ {formatted_price} </b>‚ÇΩ\n\n" \
					   f"<b>–ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –µ—â–µ –æ–¥–∏–Ω —Ç–æ–≤–∞—Ä, –≤—ã –º–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ –Ω–æ–≤—ã–π –∞—Ä—Ç–∏–∫—É–ª –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–∏—Å–∫.</b>"

		await bot.send_photo(chat_id=message.chat.id, photo=f"{URL_ph}", caption=message_text, reply_markup=inline_keyboard)

		await state.finish()
	else:
		await message.answer(f"üë©üèª‚Äçü¶∞üí¨ <b>–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –≤–≤–µ–¥–µ–Ω–Ω—ã–π –≤–∞–º–∏ –∞—Ä—Ç–∏–∫—É–ª –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –Ω–∞—à–µ–π —Å–∏—Å—Ç–µ–º–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –≤–≤–µ–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∞—Ä—Ç–∏–∫—É–ª, –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.</b>")

async def basket_handler_call(callback_query: types.CallbackQuery, state: FSMContext):
	"""–°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–∫–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–∏—Å–∫–∞"""
	inline_keyboard = InlineKeyboardMarkup()
	inline_keyboard.add(InlineKeyboardButton("üîç –ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤", callback_data="search"))

	"""–ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Ç–æ–≤–∞—Ä–∞—Ö –∏–∑ JSON —Ñ–∞–π–ª–∞"""
	bs_data = load_basket_data()

	"""–¢–µ–∫—Å—Ç –¥–ª—è –≤–∫–ª–∞–¥–∫–∏"""
	message_basket = f"<b>üë©üèª‚Äçü¶∞üí¨ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤–æ –≤–∫–ª–∞–¥–∫—É ‚Ä¢ üìÅü•º –ö–æ—Ä–∑–∏–Ω–∞ –¢–æ–≤–∞—Ä–æ–≤</b>\n\n" \
					 f"<b>–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤ –∫–æ—Ä–∑–∏–Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è: üëú {len(bs_data)} –®–¢</b>\n\n" \
					 f"<b>–î–ª—è –ø–æ–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ‚Ä¢ üîç –ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤</b>\n\n" \
					 f"<b>–ú—ã –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å –≤–∞–º —Å –≤–∞—à–∏–º–∏ –ø–æ–∫—É–ø–∫–∞–º–∏!</b>"

	await bot.edit_message_text(message_basket, callback_query.from_user.id, callback_query.message.message_id, reply_markup=inline_keyboard)

	await state.finish()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫–æ—Ä–∑–∏–Ω—ã —Ç–æ–≤–∞—Ä–æ–≤
async def basket_handler_two(callback_query: types.CallbackQuery, state: FSMContext):
	"""–°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–∫–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–∏—Å–∫–∞"""
	inline_keyboard = InlineKeyboardMarkup()
	inline_keyboard.add(InlineKeyboardButton("üîç –ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤", callback_data="search"))

	"""–ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Ç–æ–≤–∞—Ä–∞—Ö –∏–∑ JSON —Ñ–∞–π–ª–∞"""
	bs_data = load_basket_data()

	"""–¢–µ–∫—Å—Ç –¥–ª—è –≤–∫–ª–∞–¥–∫–∏"""
	message_basket = f"<b>üë©üèª‚Äçü¶∞üí¨ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤–æ –≤–∫–ª–∞–¥–∫—É ‚Ä¢ üìÅü•º –ö–æ—Ä–∑–∏–Ω–∞ –¢–æ–≤–∞—Ä–æ–≤</b>\n\n" \
					 f"<b>–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤ –∫–æ—Ä–∑–∏–Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è: üëú {len(bs_data)} –®–¢</b>\n\n" \
					 f"<b>–î–ª—è –ø–æ–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ‚Ä¢ üîç –ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤</b>\n\n" \
					 f"<b>–ú—ã –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å –≤–∞–º —Å –≤–∞—à–∏–º–∏ –ø–æ–∫—É–ø–∫–∞–º–∏!</b>"

	await callback_query.answer(message_basket, reply_markup=inline_keyboard)

	await state.finish()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û—Ç–º–µ–Ω–∏—Ç—å –ø–æ–∏—Å–∫"
@dp.callback_query_handler(lambda c: c.data == 'off_search', state=SearchState.waiting_search_bs)
async def back_p_bs(callback_query: types.CallbackQuery, state: FSMContext):
	await basket_handler_call(callback_query, state)